@using DeploymentTracker.web.Views.Manage
@inject SignInManager<ApplicationUser> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}

@*<ul class="nav nav-pills nav-stacked">
    <li class="@ManageNavPages.IndexNavClass(ViewContext)"><a asp-action="Index" class="btn btn-outline-primary">Profile</a></li>
    <li class="@ManageNavPages.ChangePasswordNavClass(ViewContext)"><a asp-action="ChangePassword" class="btn btn-outline-primary">Password</a></li>
    @if (hasExternalLogins)
    {
        <li class="@ManageNavPages.ExternalLoginsNavClass(ViewContext)"><a asp-action="ExternalLogins" class="btn btn-outline-primary">External logins</a></li>
    }
    <li class="@ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)"><a asp-action="TwoFactorAuthentication" class="btn btn-outline-primary">Two-factor authentication</a></li>
</ul>*@

<div class="btn-group" role="group" aria-label="Basic example">
@*
    <button type="button" class="btn btn-secondary">Left</button>
    <button type="button" class="btn btn-secondary">Middle</button>
    <button type="button" class="btn btn-secondary">Right</button>

*@

    <a asp-action="Index" class="btn btn-secondary @ManageNavPages.IndexNavClass(ViewContext)">Profile</a>
    <a asp-action="ChangePassword" class="btn btn-secondary @ManageNavPages.ChangePasswordNavClass(ViewContext)">Password</a>
    @if (hasExternalLogins)
    {
    <a asp-action="ExternalLogins" class="btn btn-secondary @ManageNavPages.ExternalLoginsNavClass(ViewContext)">External logins</a>
    }
        <a asp-action="TwoFactorAuthentication" class="btn btn-secondary @ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)">Two-factor authentication</a>
</div>