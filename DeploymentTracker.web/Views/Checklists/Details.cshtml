@model DeploymentTracker.web.Models.ChecklistEntity

@{
    ViewData["Title"] = "Details";
    var progress = 25;

    if (Model.ScheduledOn.HasValue)
    {
        progress = 50;
    }
    else if (Model.StartedOn.HasValue)
    {
        progress = 75;
    }
    else if (Model.CompletedOn.HasValue)
    {
        progress = 100;
    }

}

<p class="display-4">@Model.Environment.Name - @Model.Name</p>
<hr />


<div class="row">
    <div class="col-lg-12">
        <div class="progress">
            <div class="progress-bar progress-bar-striped progress-bar-animated bg-success" role="progressbar" style="width: @progress%" aria-valuenow="@progress" aria-valuemin="0" aria-valuemax="100"></div>
        </div>
        <hr />

        @if (!Model.ScheduledOn.HasValue)
        {
            <div class="alert alert-info" role="alert">
                @Model.Name hasn't scheduled yet.
            </div>
        }
        else if (!Model.StartedOn.HasValue)
        {
            <div class="alert alert-info" role="alert">
                @Model.Name hasn't started yet.
            </div>
        }
        else if (!Model.CompletedOn.HasValue)
        {
            <div class="alert alert-warning" role="alert">
                @Model.Name hasn't completed yet.
            </div>
        }
    </div>
</div>


<div class="row">


<div class="col-md-3">
    <dl class="dl-horizontal">
        <dt>
            Environment
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Environment.Name)
        </dd>
            
        <dt>
            Active
        </dt>
        <dd>
            @if (Model.IsActive)
            {
                <i class="fas fa-check-circle tableRowIcon text-success"></i>
            }
            else
            {
                <i class="far fa-check-circle tableRowIcon text-secondary"></i>
            }
        </dd>

        @if (!string.IsNullOrWhiteSpace(Model.Comments))
        {
            <dt>
                @Html.DisplayNameFor(model => model.Comments)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Comments)
            </dd>
        }

        <dt>
            @Html.DisplayNameFor(model => model.GitHash)
        </dt>
        <dd>
            @string.Format("{0}", Model.GitHash ?? "N/A")
        </dd>

    </dl>
</div>

<div class="col-lg-3">
    <dl class="dl-horizontal">
        <dt>Scheduled</dt>
        <dd>
            @if (Model.ScheduledOn.HasValue)
            {
                <i class="fas fa-check-circle tableRowIcon text-success"></i>
            }
            else
            {
                <i class="fas fa-check-circle tableRowIcon text-secondary"></i>
            }
        </dd>

        <dt>Started</dt>
        <dd>
            @if (Model.StartedOn.HasValue)
            {
                <i class="fas fa-check-circle tableRowIcon text-success"></i>
            }
            else
            {
                <i class="fas fa-check-circle tableRowIcon text-secondary"></i>
            }
        </dd>

        <dt>Completed</dt>
        <dd>
            @if (Model.CompletedOn.HasValue)
            {
                <i class="fas fa-check-circle tableRowIcon text-success"></i>
            }
            else
            {
                <i class="fas fa-check-circle tableRowIcon text-secondary"></i>
            }
        </dd>
    </dl>

</div>

<div class="col-lg-3">
    <dl>

        <dt>
            Created On
        </dt>
        <dd>
            @Html.DisplayFor(model => model.CreatedOn)
        </dd>
        <dt>
            Created By
        </dt>
        <dd>
            @Html.DisplayFor(model => model.CreatedBy)
        </dd>

        @if (Model.ScheduledOn.HasValue)
        {
            <dt>
                Scheduled For
            </dt>
            <dd>
                @Html.DisplayFor(model => model.ScheduledOn)
            </dd>

            <dt>
                Scheduled By
            </dt>
            <dd>
                @Html.DisplayFor(model => model.ScheduledBy)
            </dd>
        }

        @if (Model.StartedOn.HasValue)
        {
            <dt>
                Started On
            </dt>
            <dd>
                @Html.DisplayFor(model => model.StartedOn)
            </dd>

            <dt>
                Started By
            </dt>
            <dd>
                @Html.DisplayFor(model => model.StartedBy)
            </dd>
        }

        @if (Model.CompletedOn.HasValue)
        {
            <dt>
                Completed On
            </dt>
            <dd>
                @Html.DisplayFor(model => model.CompletedOn)
            </dd>


            <dt>
                Completed By
            </dt>
            <dd>
                @Html.DisplayFor(model => model.CompletedBy)
            </dd>
        }


        <dt>
            Last Modified On
        </dt>
        <dd>
            @Html.DisplayFor(model => model.LastModifiedOn)
        </dd>
        <dt>
            Last Modified By
        </dt>
        <dd>
            @Html.DisplayFor(model => model.LastModifiedBy)
        </dd>
    </dl>
</div>

<div class="col-md-3">
    @if (Model.Tasks.Any())
    {
        <h5>Tasks</h5>
        <div class="table-responsive">
            <table class="table table-bordered">
                <thead>
                <tr>
                    <th>

                    </th>
                    <th>
                        Task Name
                    </th>
                </tr>
                </thead>
                <tbody>
                @foreach (var task in Model.Tasks)
                {
                    <tr>
                        <td>
                            @if (task.IsComplete)
                            {
                                <i class="fas fa-check-circle tableRowIcon text-success"></i>
                            }
                            else
                            {
                                <i class="fas fa-check-circle tableRowIcon text-secondary"></i>
                            }
                        </td>
                        <td>
                            @task.Task.Name
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="alert alert-warning" role="alert">
            No tasks were found!
        </div>
    }
</div>
</div>

<hr />
<div>
    <a asp-action="Index" class="btn btn-outline-secondary">Back to List</a>
    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-outline-primary">Edit</a>
</div>